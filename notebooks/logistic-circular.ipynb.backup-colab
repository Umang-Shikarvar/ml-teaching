{
 "cells": [
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "---\n",
    "author: Nipun Batra\n",
    "badges: true\n",
    "categories:\n",
    "- ML\n",
    "date: '2024-1-1'\n",
    "title: Logistic Regression - Basis\n",
    "toc: true\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "from latexify import *\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "import matplotlib.patches as mpatches\n",
    "%config InlineBackend.figure_format = 'retina'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Choose some points between"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "np.random.seed(0)\n",
    "x1 = np.random.randn(1, 100)\n",
    "x2 = np.random.randn(1, 100)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "y = x1**2 + x2**2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.76405235,  0.40015721,  0.97873798,  2.2408932 ,  1.86755799,\n",
       "        -0.97727788,  0.95008842, -0.15135721, -0.10321885,  0.4105985 ,\n",
       "         0.14404357,  1.45427351,  0.76103773,  0.12167502,  0.44386323,\n",
       "         0.33367433,  1.49407907, -0.20515826,  0.3130677 , -0.85409574,\n",
       "        -2.55298982,  0.6536186 ,  0.8644362 , -0.74216502,  2.26975462,\n",
       "        -1.45436567,  0.04575852, -0.18718385,  1.53277921,  1.46935877,\n",
       "         0.15494743,  0.37816252, -0.88778575, -1.98079647, -0.34791215,\n",
       "         0.15634897,  1.23029068,  1.20237985, -0.38732682, -0.30230275,\n",
       "        -1.04855297, -1.42001794, -1.70627019,  1.9507754 , -0.50965218,\n",
       "        -0.4380743 , -1.25279536,  0.77749036, -1.61389785, -0.21274028,\n",
       "        -0.89546656,  0.3869025 , -0.51080514, -1.18063218, -0.02818223,\n",
       "         0.42833187,  0.06651722,  0.3024719 , -0.63432209, -0.36274117,\n",
       "        -0.67246045, -0.35955316, -0.81314628, -1.7262826 ,  0.17742614,\n",
       "        -0.40178094, -1.63019835,  0.46278226, -0.90729836,  0.0519454 ,\n",
       "         0.72909056,  0.12898291,  1.13940068, -1.23482582,  0.40234164,\n",
       "        -0.68481009, -0.87079715, -0.57884966, -0.31155253,  0.05616534,\n",
       "        -1.16514984,  0.90082649,  0.46566244, -1.53624369,  1.48825219,\n",
       "         1.89588918,  1.17877957, -0.17992484, -1.07075262,  1.05445173,\n",
       "        -0.40317695,  1.22244507,  0.20827498,  0.97663904,  0.3563664 ,\n",
       "         0.70657317,  0.01050002,  1.78587049,  0.12691209,  0.40198936]])"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "y[y>1] = 1\n",
    "y[y<1] = 0\n",
    "\n",
    "c = 0\n",
    "for i in range(100):\n",
    "    if y[0, i] == 1:\n",
    "        y[0, i] = 0\n",
    "        c += 1\n",
    "    if c == 10:\n",
    "        break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 200x123.457 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 154,
       "width": 173
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "latexify()\n",
    "plt.scatter(x1, x2, c=y,s=5)\n",
    "\n",
    "\n",
    "yellow_patch = mpatches.Patch(color='yellow', label='Oranges')\n",
    "blue_patch = mpatches.Patch(color='darkblue', label='Tomatoes')\n",
    "plt.legend(handles=[yellow_patch, blue_patch])\n",
    "plt.xlabel(r\"$x_1$\")\n",
    "plt.ylabel(r\"$x_2$\")\n",
    "plt.gca().set_aspect('equal')\n",
    "format_axes(plt.gca())\n",
    "plt.savefig(\"../figures/logistic-regression/logisitic-circular-data.pdf\", bbox_inches=\"tight\", transparent=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2, 100)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.vstack((x1, x2)).shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/nipun.batra/miniforge3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n",
      "  warnings.warn(\n",
      "/home/nipun.batra/miniforge3/lib/python3.9/site-packages/sklearn/utils/validation.py:1183: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(penalty=&#x27;none&#x27;, solver=&#x27;newton-cg&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(penalty=&#x27;none&#x27;, solver=&#x27;newton-cg&#x27;)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression(penalty='none', solver='newton-cg')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf_1 = LogisticRegression(penalty='none',solver='newton-cg')\n",
    "clf_1.fit(np.vstack((x1, x2)).T, y.T)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 200x123.457 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 171,
       "width": 298
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "X = np.vstack((x1, x2)).T\n",
    "# create a mesh to plot in\n",
    "x_min, x_max = X[:, 0].min() - 0.3, X[:, 0].max() + 0.3\n",
    "y_min, y_max = X[:, 1].min() - 0.3, X[:, 1].max() + 0.3\n",
    "h = 0.02\n",
    "xx, yy = np.meshgrid(np.arange(x_min, x_max, h),\n",
    "                     np.arange(y_min, y_max, h))\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "Z = clf_1.predict(np.c_[xx.ravel(), yy.ravel()])\n",
    "\n",
    "# Put the result into a color plot\n",
    "Z = Z.reshape(xx.shape)\n",
    "latexify()\n",
    "yellow_patch = mpatches.Patch(color='yellow', label='Oranges')\n",
    "blue_patch = mpatches.Patch(color='darkblue', label='Tomatoes')\n",
    "pink_patch = mpatches.Patch(color='darksalmon', label='Predict oranges')\n",
    "lblue_patch = mpatches.Patch(color='lightblue', label='Predict tomatoes')\n",
    "plt.legend(handles=[yellow_patch, blue_patch, pink_patch, lblue_patch], loc='upper center',\n",
    "           bbox_to_anchor=(0.5, 1.25),\n",
    "          ncol=2, fancybox=True, shadow=True)\n",
    "\n",
    "plt.contourf(xx, yy, Z, cmap=plt.cm.Paired, alpha=0.4)\n",
    "plt.gca().set_aspect('equal')\n",
    "plt.scatter(x1, x2, c=y,s=5)\n",
    "plt.xlabel(r\"$x_1$\")\n",
    "plt.ylabel(r\"$x_2$\")\n",
    "plt.gca().set_aspect('equal')\n",
    "plt.savefig(\"../figures/logistic-regression/logisitic-linear-prediction.pdf\", bbox_inches=\"tight\", transparent=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_x = np.zeros((4, 100))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_x[0] = x1\n",
    "new_x[1] = x2\n",
    "new_x[2] = x1**2\n",
    "new_x[3] = x2**2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "clf = LogisticRegression(penalty='none',solver='newton-cg')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/nipun.batra/miniforge3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:1183: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n",
      "  warnings.warn(\n",
      "/home/nipun.batra/miniforge3/lib/python3.9/site-packages/sklearn/utils/validation.py:1183: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(penalty=&#x27;none&#x27;, solver=&#x27;newton-cg&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(penalty=&#x27;none&#x27;, solver=&#x27;newton-cg&#x27;)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression(penalty='none', solver='newton-cg')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf.fit(new_x.T, y.T)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.50464855, -0.30337009,  1.08937351,  0.73697949]])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 1.76405235,  0.40015721,  0.97873798,  2.2408932 ,  1.86755799,\n",
       "       -0.97727788,  0.95008842, -0.15135721, -0.10321885,  0.4105985 ,\n",
       "        0.14404357,  1.45427351,  0.76103773,  0.12167502,  0.44386323,\n",
       "        0.33367433,  1.49407907, -0.20515826,  0.3130677 , -0.85409574,\n",
       "       -2.55298982,  0.6536186 ,  0.8644362 , -0.74216502,  2.26975462,\n",
       "       -1.45436567,  0.04575852, -0.18718385,  1.53277921,  1.46935877,\n",
       "        0.15494743,  0.37816252, -0.88778575, -1.98079647, -0.34791215,\n",
       "        0.15634897,  1.23029068,  1.20237985, -0.38732682, -0.30230275,\n",
       "       -1.04855297, -1.42001794, -1.70627019,  1.9507754 , -0.50965218,\n",
       "       -0.4380743 , -1.25279536,  0.77749036, -1.61389785, -0.21274028,\n",
       "       -0.89546656,  0.3869025 , -0.51080514, -1.18063218, -0.02818223,\n",
       "        0.42833187,  0.06651722,  0.3024719 , -0.63432209, -0.36274117,\n",
       "       -0.67246045, -0.35955316, -0.81314628, -1.7262826 ,  0.17742614,\n",
       "       -0.40178094, -1.63019835,  0.46278226, -0.90729836,  0.0519454 ,\n",
       "        0.72909056,  0.12898291,  1.13940068, -1.23482582,  0.40234164,\n",
       "       -0.68481009, -0.87079715, -0.57884966, -0.31155253,  0.05616534,\n",
       "       -1.16514984,  0.90082649,  0.46566244, -1.53624369,  1.48825219,\n",
       "        1.89588918,  1.17877957, -0.17992484, -1.07075262,  1.05445173,\n",
       "       -0.40317695,  1.22244507,  0.20827498,  0.97663904,  0.3563664 ,\n",
       "        0.70657317,  0.01050002,  1.78587049,  0.12691209,  0.40198936])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_x.T[:, 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(100, 2)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = np.vstack((x1, x2)).T\n",
    "X.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 200x123.457 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 171,
       "width": 298
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a mesh to plot in\n",
    "x_min, x_max = X[:, 0].min() - 0.3, X[:, 0].max() + 0.3\n",
    "y_min, y_max = X[:, 1].min() - 0.3, X[:, 1].max() + 0.3\n",
    "h = 0.02\n",
    "xx, yy = np.meshgrid(np.arange(x_min, x_max, h),\n",
    "                     np.arange(y_min, y_max, h))\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "Z = clf.predict(np.c_[xx.ravel(), yy.ravel(), np.square(xx.ravel()), np.square(yy.ravel())])\n",
    "\n",
    "# Put the result into a color plot\n",
    "Z = Z.reshape(xx.shape)\n",
    "latexify()\n",
    "yellow_patch = mpatches.Patch(color='yellow', label='Oranges')\n",
    "blue_patch = mpatches.Patch(color='darkblue', label='Tomatoes')\n",
    "pink_patch = mpatches.Patch(color='darksalmon', label='Predict oranges')\n",
    "lblue_patch = mpatches.Patch(color='lightblue', label='Predict tomatoes')\n",
    "plt.legend(handles=[yellow_patch, blue_patch, pink_patch, lblue_patch], loc='upper center',\n",
    "           bbox_to_anchor=(0.5, 1.25),\n",
    "          ncol=2, fancybox=True, shadow=True)\n",
    "\n",
    "plt.contourf(xx, yy, Z, cmap=plt.cm.Paired, alpha=0.4)\n",
    "plt.gca().set_aspect('equal')\n",
    "plt.scatter(x1, x2, c=y,s=5)\n",
    "plt.xlabel(r\"$x_1$\")\n",
    "plt.ylabel(r\"$x_2$\")\n",
    "plt.gca().set_aspect('equal')\n",
    "plt.savefig(\"../figures/logistic-regression/logisitic-circular-prediction.pdf\", bbox_inches=\"tight\", transparent=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(261, 272)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Z.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-2.85298982, -2.52340315,  8.13955089,  6.36756347],\n",
       "       [-2.83298982, -2.52340315,  8.0258313 ,  6.36756347],\n",
       "       [-2.81298982, -2.52340315,  7.9129117 ,  6.36756347],\n",
       "       ...,\n",
       "       [ 2.52701018,  2.67659685,  6.38578047,  7.16417069],\n",
       "       [ 2.54701018,  2.67659685,  6.48726088,  7.16417069],\n",
       "       [ 2.56701018,  2.67659685,  6.58954129,  7.16417069]])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.c_[xx.ravel(), yy.ravel(), np.square(xx.ravel()), np.square(yy.ravel())]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-2.85298982, -2.83298982, -2.81298982, ...,  2.52701018,\n",
       "        2.54701018,  2.56701018])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xx.ravel()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 200x123.457 with 2 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 159,
       "width": 237
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a mesh to plot in\n",
    "x_min, x_max = X[:, 0].min() - h, X[:, 0].max() + h\n",
    "y_min, y_max = X[:, 1].min() - h, X[:, 1].max() + h\n",
    "h = 0.02\n",
    "xx, yy = np.meshgrid(np.arange(x_min, x_max, h),\n",
    "                     np.arange(y_min, y_max, h))\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "Z = clf.predict_proba(np.c_[xx.ravel(), yy.ravel(), np.square(xx.ravel()), np.square(yy.ravel())])\n",
    "# Put the result into a color plot\n",
    "Z = Z[:, 0].reshape(xx.shape)\n",
    "latexify()\n",
    "plt.contourf(xx, yy, Z,levels=np.linspace(0, 1.1, num=10),cmap='Blues')\n",
    "plt.gca().set_aspect('equal')\n",
    "#plt.scatter(x1, x2, c=y)\n",
    "plt.xlabel(r\"$x_1$\")\n",
    "plt.ylabel(r\"$x_2$\")\n",
    "plt.colorbar(label='P(Tomatoes)')\n",
    "plt.savefig(\"../figures/logistic-regression/logisitic-circular-probability.pdf\", bbox_inches=\"tight\", transparent=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(233, 244)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xx.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "56852"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Z.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.        , 0.02244898, 0.04489796, 0.06734694, 0.08979592,\n",
       "       0.1122449 , 0.13469388, 0.15714286, 0.17959184, 0.20204082,\n",
       "       0.2244898 , 0.24693878, 0.26938776, 0.29183673, 0.31428571,\n",
       "       0.33673469, 0.35918367, 0.38163265, 0.40408163, 0.42653061,\n",
       "       0.44897959, 0.47142857, 0.49387755, 0.51632653, 0.53877551,\n",
       "       0.56122449, 0.58367347, 0.60612245, 0.62857143, 0.65102041,\n",
       "       0.67346939, 0.69591837, 0.71836735, 0.74081633, 0.76326531,\n",
       "       0.78571429, 0.80816327, 0.83061224, 0.85306122, 0.8755102 ,\n",
       "       0.89795918, 0.92040816, 0.94285714, 0.96530612, 0.9877551 ,\n",
       "       1.01020408, 1.03265306, 1.05510204, 1.07755102, 1.1       ])"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.linspace(0, 1.1, num=50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
